name: Python package

on:
  push:
    branches:
      - 'main'

jobs:
  version_number:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{steps.step1.outputs.test}}
    steps:
    - id: step1
      run: |
       date_part=$(date +%y%m.%-d%H)
       PKG_VERSION="1."$date_part
       echo $PKG_VERSION    
       echo "PKG_VERSION=${PKG_VERSION}" >> $GITHUB_ENV
       echo "::set-output name=test::${PKG_VERSION}"
  test_on_ubuntu:
    runs-on: ubuntu-latest # This is a special 8 core runner
    needs: version_number
    strategy:
      matrix:
        python-version: [ '3.8' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install pylint
          pip install pytest
          pip install coverage
          pip install --upgrade databricks-cli

      - name: Buildwheel
        run: |
          python -m pip install --user --upgrade build
          python -m build .
          echo "VERSION = $(python setup.py --version)" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
         files: ./dist/*.whl
         tag_name: v1.2.0  # Replace with the name of the existing tag you want to use
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the wheels
        uses: actions/upload-artifact@v4
        with:
          name: built_wheel
          path: dist/*.whl

      - name: Deploy to Azure Databricks
        run: |
          databricks configure --token <<EOF
          ${{ secrets.DATABRICKS_HOST }}
          ${{ secrets.DATABRICKS_TOKEN }}
          EOF
          databricks libraries install --cluster-id ${{ secrets.DATABRICKS_CLUSTER_ID }} --whl dist/*.whl


